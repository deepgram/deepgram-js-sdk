name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install dependencies and build
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      - name: Create Release Pull Request or Publish to NPM
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Publish to NPM (Dry Run)
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          cd packages/core
          echo "ðŸ§ª DRY RUN: Would publish to NPM"

          PACKAGE_NAME=$(cat package.json | jq -r .name)
          PACKAGE_VERSION=$(cat package.json | jq -r .version)

          echo "Package: $PACKAGE_NAME"
          echo "Version: $PACKAGE_VERSION"

          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

          # Check if version contains prerelease identifiers
          if [[ "$PACKAGE_VERSION" =~ -[a-zA-Z] ]]; then
            echo "ðŸ“¦ Publishing prerelease version with --tag next"
            npm publish --dry-run --access public --tag next
          else
            echo "ðŸ“¦ Publishing stable version with --tag latest"
            npm publish --dry-run --access public --tag latest
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
